ersion: '3.8'

services:
  # PresentationTier 
  Front-N1:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "81:80"
    networks:
      - frontend
      - backend
  Front-N2:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "82:80"
    networks:
      - frontend
      - backend
  Front-N3:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "83:80"
    networks:
      - frontend
      - backend
  Front-LoadBalancer:
    build: ./PresentationTier/LoadBalancer/
    ports:
      - "80:80"
    depends_on:
      - Front-N1
      - Front-N2
      - Front-N3
    networks:
      - frontend
      - backend

  # BusinessTier
  Back-N1:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3001:80"
    networks:
      - backend
      - database
  Back-N2:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3002:80"
    networks:
      - backend
      - database
  Back-N3:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3003:80"
    networks:
      - backend
      - database
  Back-LoadBalancer:
    build: ./BusinessTier/LoadBalancer/
    ports:
      - "3000:3000"
    depends_on:
      - Back-N1
      - Back-N2
      - Back-N3
    networks:
      - backend
      - frontend
      - database

  # DataTier
  Data-Mongo1:
    image: mongo:6.0.4
    container_name: Data-Mongo1
    restart: always
    ports:
      - "40001:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  Data-Mongo2:
    image: mongo:6.0.4
    container_name: Data-Mongo2
    restart: always
    ports:
      - "40002:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  Data-Mongo3:
    image: mongo:6.0.4
    container_name: Data-Mongo3
    restart: always
    ports:
      - "40003:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  Mongo-Initialisation:
    image: mongo:6.0.4
    hostname: Mongo-Initialisation
    container_name: Mongo-Initialisation
    networks:
      - database
    depends_on:
      - Data-Mongo1
      - Data-Mongo2
      - Data-Mongo3
    restart: "no"
    volumes:
      - ./database/setup.sh:/database/setup.sh
      - ./database/init.js:/database/init.js
    entrypoint: [ "bash", "/database/setup.sh" ]

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  database:
    driver: bridge