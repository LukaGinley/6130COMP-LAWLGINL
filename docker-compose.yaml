version: '3'

services:
  # PresentationTier 
  front-n1:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "81:80"
    networks:
      - frontend
      - backend
  front-n2:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "82:80"
    networks:
      - frontend
      - backend
  front-n3:
    build: ./PresentationTier/Website/
    restart: always
    ports:
      - "83:80"
    networks:
      - frontend
      - backend
  front-loadbalancer:
    build: ./PresentationTier/LoadBalancer/
    ports:
      - "80:80"
    depends_on:
      - front-n1
      - front-n2
      - front-n3
    networks:
      - frontend
      - backend

  # BusinessTier
  back-n1:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3001:80"
    networks:
      - backend
      - database
  back-n2:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3002:80"
    networks:
      - backend
      - database
  back-n3:
    build: ./BusinessTier/Backend/
    restart: always
    ports:
      - "3003:80"
    networks:
      - backend
      - database
  back-loadbalancer:
    build: ./BusinessTier/LoadBalancer/
    ports:
      - "3000:3000"
    depends_on:
      - back-n1
      - back-n2
      - back-n3
    networks:
      - backend
      - frontend
      - database

  # DataTier
  data-mongo1:
    image: mongo:6.0.4
    container_name: data-mongo1
    restart: always
    ports:
      - "40001:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  data-mongo2:
    image: mongo:6.0.4
    container_name: data-mongo2
    restart: always
    ports:
      - "40002:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  data-mongo3:
    image: mongo:6.0.4
    container_name: data-mongo3
    restart: always
    ports:
      - "40003:27017"
    networks:
      - database
      - backend
    entrypoint:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0"
      ]
  mongo-initialisation:
    image: mongo:6.0.4
    hostname: Mongo-initialisation
    container_name: Mongo-initialisation
    networks:
      - database
    depends_on:
      - data-mongo1
      - data-mongo2
      - data-mongo3
    restart: "no"
    volumes:
      - ./database/setup.sh:/database/setup.sh
      - ./database/init.js:/database/init.js
    entrypoint: [ "bash", "/database/setup.sh" ]

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
  database:
    driver: bridge